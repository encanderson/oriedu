generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESQL_URI")
}



model User {
  id         String   @id @default(uuid())
  user_id    String   @unique
  active     Boolean
  app        String
  code       Int?
  created_at DateTime
  email      String   @unique
  password   String?
  updated_at DateTime
  consents   Json?

  @@map("users")
}

model School {
  id          String   @id @default(uuid())
  cnpj        String   @unique
  register    Int      @unique
  fantasia    String
  logo        String?
  contacts    Json?
  address     Json?
  modalities  String[]
  classes     String[]
  school      Employee[]
  turmas      Class[]
  students    Student[]
  
  @@map("schools")
}

model Employee {
  id          String   @id @default(uuid())
  user_id     String   @unique
  name        String
  birthday    DateTime?
  gender      String?
  ethnic      String?
  docs        String?
  job         String?
  contacts    String?
  address     String?
  contract    Json?
  qualifications  Json?
  salary      Float?
  bank        String?
  picture     String?
  school_id   String
  school      School   @relation(fields: [school_id], references: [id])
  teacher     Teacher?

  @@map("employees")
}

model Class {
  id          String   @id @default(uuid())
  modality    String
  class       String
  shift       String
  subjects    String[]
  school_id   String
  school      School   @relation(fields: [school_id], references: [id])
  students    Student[]

  @@map("classes")
}

model Teacher {
  id          String   @id @default(uuid())
  employee_id  String   @unique
  classes      String[]
  employee    Employee @relation(fields: [employee_id], references: [id])

  @@map("teachers")
}

model Student {
  id              String   @id @default(uuid())
  number          String
  name            String
  birthday        DateTime
  gender          String
  ethnic          String
  birthplace      Json
  docs            String
  emergency       String
  go_home_alone   String
  parents         String
  social_program  Boolean
  fee             Float
  defaulting      Boolean?
  history         Json[]
  school_id       String
  class_id        String
  school          School @relation(fields: [school_id], references: [id])
  class           Class   @relation(fields: [class_id], references: [id])

  @@map("students")
}

model Admin {
  id              String   @id @default(uuid())
  user_id         String   @unique
  password        String

  @@map("admin")
}

model Questions {
  id              String   @id @default(uuid())
  name            String
  subject         String
  email           String
  school_id       String
  message         String

  @@map("questions")
}