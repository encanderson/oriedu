{"version":3,"file":"static/js/504.6095aeed.chunk.js","mappings":"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","sources":["components/cards/MainCard.js","components/extended/AuthCardWrapper.js","components/extended/AuthWrapper1.js","hooks/useScriptRef.js","utils/password-strength.js","utils/createUser.js","pages/auth/register/Form.js","pages/auth/register/index.js","store/constant.js","utils/Mask.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\n// material-ui\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n} from \"@material-ui/core\";\n\n// constant\nconst headerSX = {\n  \"& .MuiCardHeader-action\": { mr: 0 },\n};\n\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\n\nconst MainCard = React.forwardRef(\n  (\n    {\n      border = true,\n      boxShadow,\n      children,\n      content = true,\n      contentClass,\n      contentSX,\n      darkTitle,\n      secondary,\n      shadow,\n      sx = {},\n      title,\n      ...others\n    },\n    ref\n  ) => {\n    const theme = useTheme();\n\n    return (\n      <Card\n        ref={ref}\n        {...others}\n        sx={{\n          border: border ? \"1px solid\" : \"none\",\n          borderColor:\n            theme.palette.mode === \"dark\"\n              ? theme.palette.background.default\n              : theme.palette.primary[200] + 75,\n          \":hover\": {\n            boxShadow: boxShadow\n              ? shadow\n                ? shadow\n                : theme.palette.mode === \"dark\"\n                ? \"0 2px 14px 0 rgb(33 150 243 / 10%)\"\n                : \"0 2px 14px 0 rgb(32 40 45 / 8%)\"\n              : \"inherit\",\n          },\n          ...sx,\n        }}\n      >\n        {/* card header and action */}\n        {!darkTitle && title && (\n          <CardHeader sx={headerSX} title={title} action={secondary} />\n        )}\n        {darkTitle && title && (\n          <CardHeader\n            sx={headerSX}\n            title={<Typography variant=\"h3\">{title}</Typography>}\n            action={secondary}\n          />\n        )}\n\n        {/* content & header divider */}\n        {title && <Divider />}\n\n        {/* card content */}\n        {content && (\n          <CardContent sx={contentSX} className={contentClass}>\n            {children}\n          </CardContent>\n        )}\n        {!content && children}\n      </Card>\n    );\n  }\n);\n\nMainCard.propTypes = {\n  border: PropTypes.bool,\n  boxShadow: PropTypes.bool,\n  children: PropTypes.node,\n  content: PropTypes.bool,\n  contentClass: PropTypes.string,\n  contentSX: PropTypes.object,\n  darkTitle: PropTypes.bool,\n  secondary: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n  shadow: PropTypes.string,\n  sx: PropTypes.object,\n  title: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nexport default MainCard;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// project import\nimport MainCard from \"@src/components/cards/MainCard\";\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    maxWidth: \"475px\",\n    \"& > *\": {\n      flexGrow: 1,\n      flexBasis: \"50%\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"20px\",\n    },\n    [theme.breakpoints.down(\"lg\")]: {\n      maxWidth: \"400px\",\n    },\n  },\n  content: {\n    padding: theme.spacing(5) + \" !important\",\n    [theme.breakpoints.down(\"lg\")]: {\n      padding: theme.spacing(3) + \" !important\",\n    },\n  },\n}));\n\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\n\nconst AuthCardWrapper = ({ children, ...other }) => {\n  const classes = useStyles();\n\n  return (\n    <MainCard\n      className={classes.card}\n      contentClass={classes.content}\n      {...other}\n    >\n      {children}\n    </MainCard>\n  );\n};\n\nAuthCardWrapper.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    display: 'flex',\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\n    height: '100%',\n    minHeight: '100vh',\n    width: '100%',\n    maxWidth: 'calc(100% + 16px)'\n}));\n\nexport default AuthWrapper1;\n","import { useEffect, useRef } from 'react';\n\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","/**\n * Password validator for login pages\n */\n\nimport value from \"../assets/scss/_themes-vars.module.scss\";\n\n// has number\nconst hasNumber = (value) => {\n  return new RegExp(/[0-9]/).test(value);\n};\n\n// has mix of small and capitals\nconst hasMixed = (value) => {\n  return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\n};\n\n// has special chars\nconst hasSpecial = (value) => {\n  return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\n};\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n  if (count < 2) return { label: \"Muito Fraca\", color: value.red500 };\n  if (count < 3) return { label: \"Fraca\", color: value.amber500 };\n  if (count < 4) return { label: \"Normal\", color: value.deepOrange200 };\n  if (count < 5) return { label: \"Boa\", color: value.A400 };\n  if (count < 6) return { label: \"Forte\", color: value.A700 };\n};\n\n// password strength indicator\nexport const strengthIndicator = (value) => {\n  let strengths = 0;\n  if (value.length > 5) strengths++;\n  if (value.length > 7) strengths++;\n  if (hasNumber(value)) strengths++;\n  if (hasSpecial(value)) strengths++;\n  if (hasMixed(value)) strengths++;\n  return strengths;\n};\n","export const filterUser = (data) => {\n  const name = data.firstName + \" \" + data.lastName;\n\n  const profession = data.profession;\n  let app = \"\";\n\n  if (\n    profession === \"engenheiro(a)\" ||\n    profession === \"arquiteto(a)\" ||\n    profession === \"agrimensor(a)\"\n  ) {\n    app = \"engineer\";\n  } else if (profession === \"empreiteiro(a)\") {\n    app = \"constructor\";\n  } else if (profession === \"fornecedor\") {\n    app = \"provider\";\n  } else if (profession === \"estudante\") {\n    app = \"intern\";\n  } else {\n    app = \"worker\";\n  }\n\n  const user = {\n    app: app,\n    cpf: data.cpf,\n    email: data.email,\n    password: data.password,\n    profession: profession,\n    name: name,\n    consents: data.consents,\n  };\n  return user;\n};\n","import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Typography,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\n\n// third party\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\n\n// project imports\nimport useScriptRef from \"@src/hooks/useScriptRef\";\nimport { strengthColor, strengthIndicator } from \"@src/utils/password-strength\";\nimport Mask from \"@src/utils/Mask\";\nimport { SNACKBAR_OPEN } from \"@src/store/actions\";\nimport { profiles } from \"@src/store/constant\";\nimport config from \"@src/config\";\nimport { createUser } from \"@src/api/auth\";\nimport { filterUser } from \"@src/utils/createUser\";\n\n// assets\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n  redButton: {\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    backgroundColor:\n      theme.palette.mode === \"dark\"\n        ? theme.palette.dark.main\n        : theme.palette.grey[50],\n    border: \"1px solid\",\n    borderColor:\n      theme.palette.mode === \"dark\"\n        ? theme.palette.dark.light + 20\n        : theme.palette.grey[100],\n    color: theme.palette.grey[700],\n    textTransform: \"none\",\n    \"&:hover\": {\n      backgroundColor:\n        theme.palette.mode === \"dark\"\n          ? theme.palette.dark.light + 20\n          : theme.palette.primary.light,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"0.875rem\",\n    },\n  },\n  signDivider: {\n    flexGrow: 1,\n  },\n  signText: {\n    cursor: \"unset\",\n    margin: theme.spacing(2),\n    padding: \"5px 56px\",\n    borderColor:\n      theme.palette.mode === \"dark\"\n        ? theme.palette.dark.light + 20 + \" !important\"\n        : theme.palette.grey[100] + \" !important\",\n    color: theme.palette.grey[900] + \"!important\",\n    fontWeight: 500,\n  },\n  loginIcon: {\n    marginRight: \"16px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: \"8px\",\n    },\n  },\n  loginInput: {\n    ...theme.typography.customInput,\n  },\n}));\n\n//===========================|| JWT - REGISTER ||===========================//\n\nconst FormRegister = ({ ...others }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const classes = useStyles();\n  const scriptedRef = useScriptRef();\n\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [checkedPrivacy, setCheckedPrivacy] = React.useState(false);\n  const [checkdTerms, setCheckedTerms] = React.useState(false);\n\n  const [strength, setStrength] = React.useState(0);\n  const [level, setLevel] = React.useState(\"\");\n\n  const registerSubmit = async (values) => {\n    const data = {\n      consents: {\n        privacy: checkedPrivacy,\n        terms: checkdTerms,\n      },\n      cpf: values.cpf,\n      email: values.email,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      password: values.password,\n      profession: values.profession,\n    };\n    if (checkdTerms && checkedPrivacy && data.profession !== \"\") {\n      const user = filterUser(data);\n      const response = await createUser(user);\n\n      if (response.status === 201) {\n        dispatch({\n          type: SNACKBAR_OPEN,\n          open: true,\n          message: response.data.message,\n          variant: \"alert\",\n          anchorOrigin: { vertical: \"top\", horizontal: \"center\" },\n          alertSeverity: \"success\",\n          close: false,\n        });\n        setTimeout(() => navigate(\"/\"), 1000);\n      } else {\n        dispatch({\n          type: SNACKBAR_OPEN,\n          open: true,\n          message: response.data.message,\n          variant: \"alert\",\n          anchorOrigin: { vertical: \"top\", horizontal: \"center\" },\n          alertSeverity: \"warning\",\n          close: false,\n        });\n      }\n    } else {\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message:\n          \"É preciso estar de acordo com nossas políticas e preencher todos os dados.\",\n        variant: \"alert\",\n        anchorOrigin: { vertical: \"top\", horizontal: \"center\" },\n        alertSeverity: \"warning\",\n        close: false,\n      });\n    }\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const changePassword = (value) => {\n    const temp = strengthIndicator(value);\n    setStrength(temp);\n    setLevel(strengthColor(temp));\n  };\n\n  useEffect(() => {\n    changePassword(\"123456\");\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n        <Grid>\n          <Divider className={classes.signDivider} orientation=\"horizontal\" />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          container\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Box mb={2}>\n            <Typography variant=\"subtitle1\">Preencha todos dados</Typography>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Formik\n        initialValues={{\n          cpf: \"\",\n          email: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          password: \"\",\n          profession: \"\",\n          submit: null,\n        }}\n        validationSchema={Yup.object().shape({\n          profession: Yup.string().required(\"Indique sua área de atuação\"),\n          cpf: Yup.string().min(14).max(14).required(\"CPF é obrigatório\"),\n          email: Yup.string()\n            .email(\"O email deve ser válido\")\n            .max(255)\n            .required(\"Email é obrigatório\"),\n          firstName: Yup.string()\n            .max(20)\n            .required(\"Digite o seu primeiro nome\"),\n          lastName: Yup.string().max(20).required(\"Digite o seu último nome\"),\n          password: Yup.string().max(255).required(\"Senha é obrigatória\"),\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            registerSubmit(values);\n            if (scriptedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          setFieldValue,\n          isSubmitting,\n          touched,\n          values,\n        }) => (\n          <form noValidate onSubmit={handleSubmit} {...others}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  className={classes.loginInput}\n                  variant=\"outlined\"\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-firstName-register\">\n                    Primeiro Nome\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-firstName-register\"\n                    name=\"firstName\"\n                    value={values.firstName}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    inputProps={{\n                      classes: {\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                    autoComplete=\"off\"\n                  />\n                  {touched.firstName && errors.firstName && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-name--register\"\n                    >\n                      {\" \"}\n                      {errors.firstName}{\" \"}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  className={classes.loginInput}\n                  variant=\"outlined\"\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-lastName-register\">\n                    Primeiro Nome\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-lastName-register\"\n                    name=\"lastName\"\n                    value={values.lastName}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    inputProps={{\n                      classes: {\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                  />\n                  {touched.lastName && errors.lastName && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-lastName--register\"\n                    >\n                      {\" \"}\n                      {errors.lastName}{\" \"}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n            </Grid>\n            <FormControl\n              fullWidth\n              error={Boolean(touched.profession && errors.profession)}\n              className={classes.loginInput}\n              variant=\"outlined\"\n            >\n              <Autocomplete\n                id=\"outlined-adornment-profession-register\"\n                fullWidth\n                options={profiles}\n                name={\"profession\"}\n                inputValue={values.profession || \"\"}\n                getOptionSelected={(option, value) =>\n                  option.value === value.value\n                }\n                onChange={(e, value) =>\n                  setFieldValue(\"profession\", value ? value.value : \"\")\n                }\n                onBlur={handleBlur}\n                renderInput={(params) => (\n                  <TextField {...params} label={\"Área de atuação\"} />\n                )}\n                sx={{\n                  \"& .MuiOutlinedInput-root\": {\n                    pr: \"30px !important\",\n                  },\n                }}\n              />\n              {touched.profession && errors.profession && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-profession--register\"\n                >\n                  {\" \"}\n                  {errors.profession}{\" \"}\n                </FormHelperText>\n              )}\n            </FormControl>\n            <FormControl\n              fullWidth\n              error={Boolean(touched.cpf && errors.cpf)}\n              className={classes.loginInput}\n              variant=\"outlined\"\n            >\n              <InputLabel htmlFor=\"outlined-adornment-cpf-register\">\n                CPF\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-cpf-register\"\n                fullWidth\n                value={values.cpf}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                name=\"cpf\"\n                inputProps={{\n                  mask: [\n                    /[0-9]/,\n                    /[0-9]/,\n                    /[0-9]/,\n                    \".\",\n                    /[0-9]/,\n                    /[0-9]/,\n                    /[0-9]/,\n                    \".\",\n                    /[0-9]/,\n                    /[0-9]/,\n                    /[0-9]/,\n                    \"-\",\n                    /[0-9]/,\n                    /[0-9]/,\n                  ],\n                }}\n                inputComponent={Mask}\n              />\n              {touched.cpf && errors.cpf && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-text--register\"\n                >\n                  {\" \"}\n                  {errors.cpf}{\" \"}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            <FormControl\n              fullWidth\n              error={Boolean(touched.email && errors.email)}\n              className={classes.loginInput}\n              variant=\"outlined\"\n            >\n              <InputLabel htmlFor=\"outlined-adornment-email-register\">\n                Email\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-email-register\"\n                type=\"email\"\n                value={values.email}\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                inputProps={{\n                  classes: {\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {touched.email && errors.email && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-text--register\"\n                >\n                  {\" \"}\n                  {errors.email}{\" \"}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            <FormControl\n              fullWidth\n              error={Boolean(touched.password && errors.password)}\n              className={classes.loginInput}\n              variant=\"outlined\"\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password-register\">\n                Senha\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password-register\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={values.password}\n                name=\"password\"\n                label=\"Password\"\n                onBlur={handleBlur}\n                onChange={(e) => {\n                  handleChange(e);\n                  changePassword(e.target.value);\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                inputProps={{\n                  classes: {\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {touched.password && errors.password && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-text-password-register\"\n                >\n                  {\" \"}\n                  {errors.password}{\" \"}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            {strength !== 0 && (\n              <FormControl fullWidth>\n                <Box mb={2}>\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item>\n                      <Box\n                        width={85}\n                        height={8}\n                        borderRadius={7}\n                        backgroundColor={level.color}\n                      ></Box>\n                    </Grid>\n                    <Grid item>\n                      <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                        {level.label}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </FormControl>\n            )}\n\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={checkedPrivacy}\n                      onChange={(event) =>\n                        setCheckedPrivacy(event.target.checked)\n                      }\n                      name=\"checked\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"subtitle1\">\n                      Concordo com a &nbsp;\n                      <Typography\n                        variant=\"subtitle1\"\n                        component={Link}\n                        href={`${config.orisistem}/politica-de-privacidade`}\n                        target=\"_blank\"\n                      >\n                        Política de Privacidade.\n                      </Typography>\n                    </Typography>\n                  }\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={checkdTerms}\n                      onChange={(event) =>\n                        setCheckedTerms(event.target.checked)\n                      }\n                      name=\"checked\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"subtitle1\">\n                      Concordo com os &nbsp;\n                      <Typography\n                        variant=\"subtitle1\"\n                        component={Link}\n                        href={`${config.orisistem}/termos-de-uso`}\n                        target=\"_blank\"\n                      >\n                        Termos de Uso.\n                      </Typography>\n                    </Typography>\n                  }\n                />\n              </Grid>\n            </Grid>\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n\n            <Box mt={2}>\n              <Button\n                disableElevation\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Registrar\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default FormRegister;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\n// material-ui\nimport { useTheme } from \"@material-ui/core\";\nimport {\n  Divider,\n  Grid,\n  Stack,\n  Typography,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\n// project imports\nimport AuthWrapper1 from \"@src/components/extended/AuthWrapper1\";\nimport AuthCardWrapper from \"@src/components/extended/AuthCardWrapper\";\nimport RegisterForm from \"./Form\";\n\n//===============================|| AUTH3 - REGISTER ||===============================//\n\nconst Register = () => {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <AuthWrapper1>\n      <Grid\n        container\n        justifyContent={matchDownSM ? \"center\" : \"space-between\"}\n        alignItems=\"flex-start\"\n      >\n        <Grid item xs={12} sx={{ minHeight: \"100vh\", height: \"100%\" }}>\n          <Grid\n            sx={{\n              minHeight: \"100vh\",\n              height: \"100%\",\n              p: matchDownSM ? 0 : \"0 80px\",\n            }}\n            container\n            direction=\"column\"\n            alignItems={matchDownSM ? \"center\" : \"flex-start\"}\n            spacing={matchDownSM ? 3 : 6}\n            justifyContent={matchDownSM ? \"center\" : \"space-between\"}\n          >\n            <Grid item xs={12}></Grid>\n            <Grid\n              item\n              xs={12}\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <AuthCardWrapper>\n                <Grid\n                  container\n                  spacing={2}\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                >\n                  <Grid item sx={{ mb: 3 }}>\n                    {/* <RouterLink to=\"#\">\n                                            <img alt=\"Auth method\" src={theme.palette.mode === 'dark' ? logoDark : logo} width=\"100\" />\n                                        </RouterLink> */}\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction={matchDownSM ? \"column-reverse\" : \"row\"}\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                    >\n                      <Grid item>\n                        <Stack\n                          alignItems=\"center\"\n                          justifyContent=\"center\"\n                          spacing={1}\n                        >\n                          <Typography\n                            color={theme.palette.secondary.main}\n                            gutterBottom\n                            variant={matchDownSM ? \"h3\" : \"h2\"}\n                          >\n                            Registre-se\n                          </Typography>\n                          <Typography\n                            variant=\"caption\"\n                            fontSize=\"16px\"\n                            textAlign={matchDownSM ? \"center\" : \"\"}\n                          >\n                            E faça parte da nossa Comunidade\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <RegisterForm />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid\n                      item\n                      container\n                      direction=\"column\"\n                      alignItems=\"center\"\n                      xs={12}\n                    >\n                      <Typography\n                        component={RouterLink}\n                        to=\"/login\"\n                        variant=\"subtitle1\"\n                        sx={{ textDecoration: \"none\" }}\n                      >\n                        Já tem uma conta?\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n            {/* <AuthFooter /> */}\n          </Grid>\n        </Grid>\n      </Grid>\n    </AuthWrapper1>\n  );\n};\n\nexport default Register;\n","export const gridSpacing = 3;\nexport const drawerWidth = 260;\nexport const appDrawerWidth = 320;\n\nexport const states = [\n  { value: \"Selecionar\", label: \"Selecionar\" },\n  { value: \"AC\", label: \"Acre\" },\n  { value: \"AL\", label: \"Alagoas\" },\n  { value: \"AP\", label: \"Amapá\" },\n  { value: \"AM\", label: \"Amazonas\" },\n  { value: \"BA\", label: \"Bahia\" },\n  { value: \"CE\", label: \"Ceará\" },\n  { value: \"DF\", label: \"Distrito Federal\" },\n  { value: \"ES\", label: \"Espírito Santo\" },\n  { value: \"GO\", label: \"Goiás\" },\n  { value: \"MA\", label: \"Maranhão\" },\n  { value: \"MT\", label: \"Mato Grosso\" },\n  { value: \"MS\", label: \"Mato Grosso do Sul\" },\n  { value: \"MG\", label: \"Minas Gerais\" },\n  { value: \"PA\", label: \"Pará\" },\n  { value: \"PB\", label: \"Paraíba\" },\n  { value: \"PR\", label: \"Paraná\" },\n  { value: \"PE\", label: \"Pernambuco\" },\n  { value: \"PI\", label: \"Piauí\" },\n  { value: \"RJ\", label: \"Rio de Janeiro\" },\n  { value: \"RN\", label: \"Rio Grande do Norte\" },\n  { value: \"RS\", label: \"Rio Grande do Sul\" },\n  { value: \"RO\", label: \"Rondônia\" },\n  { value: \"RR\", label: \"Roraima\" },\n  { value: \"SC\", label: \"Santa Catarina\" },\n  { value: \"SP\", label: \"São Paulo\" },\n  { value: \"SE\", label: \"Sergipe\" },\n  { value: \"TO\", label: \"Tocantins\" },\n];\n\nexport const logradouros = [\n  { value: \"Área\" },\n  { value: \"Acesso\" },\n  { value: \"Acampamento\" },\n  { value: \"Acesso Local\" },\n  { value: \"Adro\" },\n  { value: \"Área Especial\" },\n  { value: \"Aeroporto\" },\n  { value: \"Alameda\" },\n  { value: \"Avenida Marginal Direita\" },\n  { value: \"Avenida Marginal Esquerda\" },\n  { value: \"Anel Viário\" },\n  { value: \"Antiga Estrada\" },\n  { value: \"Artéria\" },\n  { value: \"Alto\" },\n  { value: \"Atalho\" },\n  { value: \"Área Verde\" },\n  { value: \"Avenida\" },\n  { value: \"Avenida Contorno\" },\n  { value: \"Avenida Marginal\" },\n  { value: \"Avenida Velha\" },\n  { value: \"Balneário\" },\n  { value: \"Beco\" },\n  { value: \"Buraco\" },\n  { value: \"Belvedere\" },\n  { value: \"Bloco\" },\n  { value: \"Balão\" },\n  { value: \"Blocos\" },\n  { value: \"Bulevar\" },\n  { value: \"Bosque\" },\n  { value: \"Boulevard\" },\n  { value: \"Baixa\" },\n  { value: \"Cais\" },\n  { value: \"Calçada\" },\n  { value: \"Caminho\" },\n  { value: \"Canal\" },\n  { value: \"Chácara\" },\n  { value: \"Chapadão\" },\n  { value: \"Ciclovia\" },\n  { value: \"Circular\" },\n  { value: \"Conjunto\" },\n  { value: \"Conjunto Mutirão\" },\n  { value: \"Complexo Viário\" },\n  { value: \"Colônia\" },\n  { value: \"Comunidade\" },\n  { value: \"Condomínio\" },\n  { value: \"Corredor\" },\n  { value: \"Campo\" },\n  { value: \"Córrego\" },\n  { value: \"Contorno\" },\n  { value: \"Descida\" },\n  { value: \"Desvio\" },\n  { value: \"Distrito\" },\n  { value: \"Entre Bloco\" },\n  { value: \"Estrada Intermunicipal\" },\n  { value: \"Enseada\" },\n  { value: \"Entrada Particular\" },\n  { value: \"Entre Quadra\" },\n  { value: \"Escada\" },\n  { value: \"Escadaria\" },\n  { value: \"Estrada Estadual\" },\n  { value: \"Estrada Vicinal\" },\n  { value: \"Estrada de Ligação\" },\n  { value: \"Estrada Municipal\" },\n  { value: \"Esplanada\" },\n  { value: \"Estrada de Servidão\" },\n  { value: \"Estrada\" },\n  { value: \"Estrada Velha\" },\n  { value: \"Estrada Antiga\" },\n  { value: \"Estação\" },\n  { value: \"Estádio\" },\n  { value: \"Estância\" },\n  { value: \"Estrada Particular\" },\n  { value: \"Estacionamento\" },\n  { value: \"Evangélica\" },\n  { value: \"Elevada\" },\n  { value: \"Eixo Industrial\" },\n  { value: \"Favela\" },\n  { value: \"Fazenda\" },\n  { value: \"Ferrovia\" },\n  { value: \"Fonte\" },\n  { value: \"Feira\" },\n  { value: \"Forte\" },\n  { value: \"Galeria\" },\n  { value: \"Granja\" },\n  { value: \"Núcleo Habitacional\" },\n  { value: \"Ilha\" },\n  { value: \"Indeterminado\" },\n  { value: \"Ilhota\" },\n  { value: \"Jardim\" },\n  { value: \"Jardinete\" },\n  { value: \"Ladeira\" },\n  { value: \"Lagoa\" },\n  { value: \"Lago\" },\n  { value: \"Loteamento\" },\n  { value: \"Largo\" },\n  { value: \"Lote\" },\n  { value: \"Mercado\" },\n  { value: \"Marina\" },\n  { value: \"Modulo\" },\n  { value: \"Projeção\" },\n  { value: \"Morro\" },\n  { value: \"Monte\" },\n  { value: \"Núcleo\" },\n  { value: \"Núcleo Rural\" },\n  { value: \"Outeiro\" },\n  { value: \"Paralela\" },\n  { value: \"Passeio\" },\n  { value: \"Pátio\" },\n  { value: \"Praça\" },\n  { value: \"Praça de Esportes\" },\n  { value: \"Parada\" },\n  { value: \"Paradouro\" },\n  { value: \"Ponta\" },\n  { value: \"Praia\" },\n  { value: \"Prolongamento\" },\n  { value: \"Parque Municipal\" },\n  { value: \"Parque\" },\n  { value: \"Parque Residencial\" },\n  { value: \"Passarela\" },\n  { value: \"Passagem\" },\n  { value: \"Passagem de Pedestre\" },\n  { value: \"Passagem Subterrânea\" },\n  { value: \"Ponte\" },\n  { value: \"Porto\" },\n  { value: \"Quadra\" },\n  { value: \"Quinta\" },\n  { value: \"Quintas\" },\n  { value: \"Rua\" },\n  { value: \"Rua Integração\" },\n  { value: \"Rua de Ligação\" },\n  { value: \"Rua Particular\" },\n  { value: \"Rua Velha\" },\n  { value: \"Ramal\" },\n  { value: \"Recreio\" },\n  { value: \"Recanto\" },\n  { value: \"Retiro\" },\n  { value: \"Residencial\" },\n  { value: \"Reta\" },\n  { value: \"Ruela\" },\n  { value: \"Rampa\" },\n  { value: \"Rodo Anel\" },\n  { value: \"Rodovia\" },\n  { value: \"Rotula\" },\n  { value: \"Rua de Pedestre\" },\n  { value: \"Margem\" },\n  { value: \"Retorno\" },\n  { value: \"Rotatória\" },\n  { value: \"Segunda Avenida\" },\n  { value: \"Sitio\" },\n  { value: \"Servidão\" },\n  { value: \"Setor\" },\n  { value: \"Subida\" },\n  { value: \"Trincheira\" },\n  { value: \"Terminal\" },\n  { value: \"Trecho\" },\n  { value: \"Trevo\" },\n  { value: \"Túnel\" },\n  { value: \"Travessa\" },\n  { value: \"Travessa Particular\" },\n  { value: \"Travessa Velha\" },\n  { value: \"Unidade\" },\n  { value: \"Via\" },\n  { value: \"Via Coletora\" },\n  { value: \"Via Local\" },\n  { value: \"Via de Acesso\" },\n  { value: \"Vala\" },\n  { value: \"Via Costeira\" },\n  { value: \"Viaduto\" },\n  { value: \"Via Expressa\" },\n  { value: \"Vereda\" },\n  { value: \"Via Elevado\" },\n  { value: \"Vila\" },\n  { value: \"Viela\" },\n  { value: \"Vale\" },\n  { value: \"Via Litorânea\" },\n  { value: \"Via de Pedestre\" },\n  { value: \"Variante\" },\n  { value: \"Zigue-Zague\" },\n];\n\nexport const activities = [\n  { value: \"Construção\", label: \"Construção\" },\n  { value: \"Materiais de Construção\", label: \"Materiais de Construção\" },\n  { value: \"Serviços de Arquitetura\", label: \"Serviços de Arquitetura\" },\n  { value: \"Serviços de Engenharia\", label: \"Serviços de Engenharia\" },\n];\n\nexport const categories = [\n  \"acabamentos\",\n  \"areia, pedra e cal\",\n  \"aços para construção\",\n  \"blocos e tijolos\",\n  \"caixas d'água e reservatórios\",\n  \"cercas e alambrados\",\n  \"churrasqueiras e fornos\",\n  \"cimentos, argamassas e concretos\",\n  \"colas e adesivos\",\n  \"decoração\",\n  \"esquadrias\",\n  \"ferragens\",\n  \"fixação e montagem\",\n  \"forros e gessos\",\n  \"instalações elétricas\",\n  \"isolamentos\",\n  \"limpeza e manutenção\",\n  \"lona, papelão e plástico bolha\",\n  \"madeiras\",\n  \"madeiras e estruturas\",\n  \"pisos e revestimentos\",\n  \"portas e janelas\",\n  \"pré-moldados e drywall\",\n  \"telhas e calhas\",\n  \"tintas e químicos\",\n  \"tintas e texturas\",\n  \"tubos e conexões\",\n  \"vedações e impermeabilizantes\",\n  \"vidros\",\n];\n\nexport const profiles = [\n  \"agrimensor(a)\",\n  \"antenista\",\n  \"arquiteto(a)\",\n  \"automação residencial\",\n  \"carpinteiro(a)\",\n  \"chaveiro(a)\",\n  \"climatização\",\n  \"decoradores\",\n  \"dedetizador\",\n  \"demolição\",\n  \"eletricista\",\n  \"empreiteiro(a)\",\n  \"encanador(a)\",\n  \"energia solar\",\n  \"engenheiro(a)\",\n  \"escavação\",\n  \"estudante\",\n  \"fornecedor\",\n  \"gesso e drywall\",\n  \"impermeabilizador(a)\",\n  \"instalador de papel de parede\",\n  \"instalador de tv digital\",\n  \"instalação de eletrônicos\",\n  \"isolamento térmico acústico\",\n  \"jardinagem\",\n  \"marceneiro(a)\",\n  \"marmoraria e granitos\",\n  \"montador(a) de móveis\",\n  \"paisagista\",\n  \"pavimentação\",\n  \"pedreiro(a)\",\n  \"pintor(a)\",\n  \"reciclagem\",\n  \"restauração e polimento de pisos\",\n  \"segurança eletrônica\",\n  \"serralheria e solda\",\n  \"servente\",\n  \"terraplenagem\",\n  \"topografia\",\n  \"vidraceiro(a)\",\n];\n\nexport const workers = [\n  \"MAO DE OBRA (C/ ENCARGOS)\",\n  \"ADMINISTRAÇÃO LOCAL DE OBRA (C/ ENCARGOS)\",\n];\n","import React from \"react\";\n\nimport MaskedInput from \"react-text-mask\";\n\n// mask expression\nconst TextMaskCExpDate = React.forwardRef(function TextMaskCustom(props, ref) {\n  const setRef = React.useCallback(\n    (maskedInputRef) => {\n      const value = maskedInputRef ? maskedInputRef.inputElement : null;\n\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref) {\n        ref.current = value;\n      }\n    },\n    [ref]\n  );\n\n  return <MaskedInput {...props} ref={setRef} />;\n});\n\nexport default TextMaskCExpDate;\n"],"names":["headerSX","mr","React","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","Card","borderColor","palette","mode","background","default","primary","CardHeader","action","Typography","variant","Divider","CardContent","className","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","padding","spacing","other","classes","AuthWrapper1","styled","display","backgroundColor","light","height","minHeight","width","scripted","useRef","useEffect","current","strengthIndicator","value","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","filterUser","data","name","firstName","lastName","profession","app","cpf","email","password","consents","redButton","fontSize","fontWeight","dark","main","grey","color","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","dispatch","useDispatch","navigate","useNavigate","scriptedRef","useScriptRef","showPassword","setShowPassword","checkedPrivacy","setCheckedPrivacy","checkdTerms","setCheckedTerms","strength","setStrength","level","setLevel","registerSubmit","values","privacy","terms","user","createUser","response","status","type","SNACKBAR_OPEN","open","message","anchorOrigin","vertical","horizontal","alertSeverity","close","setTimeout","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","count","temp","label","Grid","container","direction","justifyContent","orientation","item","xs","alignItems","Box","mb","initialValues","submit","validationSchema","Yup","shape","required","min","max","onSubmit","setErrors","setStatus","setSubmitting","success","err","errors","handleBlur","handleChange","handleSubmit","setFieldValue","isSubmitting","touched","noValidate","sm","FormControl","fullWidth","error","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","notchedOutline","autoComplete","FormHelperText","Autocomplete","options","profiles","inputValue","getOptionSelected","option","e","renderInput","params","TextField","pr","mask","inputComponent","Mask","target","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","Visibility","VisibilityOff","borderRadius","FormControlLabel","control","Checkbox","checked","component","Link","href","config","mt","Button","disableElevation","disabled","size","matchDownSM","useMediaQuery","p","AuthCardWrapper","Stack","gutterBottom","textAlign","RouterLink","to","textDecoration","gridSpacing","TextMaskCExpDate","props","setRef","maskedInputRef","inputElement"],"sourceRoot":""}