{"version":3,"file":"static/js/279.3a21d6f3.chunk.js","mappings":"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","sources":["components/cards/MainCard.js","components/extended/AuthCardWrapper.js","components/extended/AuthWrapper1.js","hooks/useScriptRef.js","utils/createUser.js","pages/auth/register/Form.js","pages/auth/register/index.js","store/constant.js","utils/Mask.js","utils/password-strength.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\n// material-ui\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n} from \"@material-ui/core\";\n\n// constant\nconst headerSX = {\n  \"& .MuiCardHeader-action\": { mr: 0 },\n};\n\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\n\nconst MainCard = React.forwardRef(\n  (\n    {\n      border = true,\n      boxShadow,\n      children,\n      content = true,\n      contentClass,\n      contentSX,\n      darkTitle,\n      secondary,\n      shadow,\n      sx = {},\n      title,\n      ...others\n    },\n    ref\n  ) => {\n    const theme = useTheme();\n\n    return (\n      <Card\n        ref={ref}\n        {...others}\n        sx={{\n          border: border ? \"1px solid\" : \"none\",\n          borderColor:\n            theme.palette.mode === \"dark\"\n              ? theme.palette.background.default\n              : theme.palette.primary[200] + 75,\n          \":hover\": {\n            boxShadow: boxShadow\n              ? shadow\n                ? shadow\n                : theme.palette.mode === \"dark\"\n                ? \"0 2px 14px 0 rgb(33 150 243 / 10%)\"\n                : \"0 2px 14px 0 rgb(32 40 45 / 8%)\"\n              : \"inherit\",\n          },\n          ...sx,\n        }}\n      >\n        {/* card header and action */}\n        {!darkTitle && title && (\n          <CardHeader sx={headerSX} title={title} action={secondary} />\n        )}\n        {darkTitle && title && (\n          <CardHeader\n            sx={headerSX}\n            title={<Typography variant=\"h3\">{title}</Typography>}\n            action={secondary}\n          />\n        )}\n\n        {/* content & header divider */}\n        {title && <Divider />}\n\n        {/* card content */}\n        {content && (\n          <CardContent sx={contentSX} className={contentClass}>\n            {children}\n          </CardContent>\n        )}\n        {!content && children}\n      </Card>\n    );\n  }\n);\n\nMainCard.propTypes = {\n  border: PropTypes.bool,\n  boxShadow: PropTypes.bool,\n  children: PropTypes.node,\n  content: PropTypes.bool,\n  contentClass: PropTypes.string,\n  contentSX: PropTypes.object,\n  darkTitle: PropTypes.bool,\n  secondary: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n  shadow: PropTypes.string,\n  sx: PropTypes.object,\n  title: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nexport default MainCard;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// project import\nimport MainCard from \"@src/components/cards/MainCard\";\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    maxWidth: \"475px\",\n    \"& > *\": {\n      flexGrow: 1,\n      flexBasis: \"50%\",\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      margin: \"20px\",\n    },\n    [theme.breakpoints.down(\"lg\")]: {\n      maxWidth: \"400px\",\n    },\n  },\n  content: {\n    padding: theme.spacing(5) + \" !important\",\n    [theme.breakpoints.down(\"lg\")]: {\n      padding: theme.spacing(3) + \" !important\",\n    },\n  },\n}));\n\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\n\nconst AuthCardWrapper = ({ children, ...other }) => {\n  const classes = useStyles();\n\n  return (\n    <MainCard\n      className={classes.card}\n      contentClass={classes.content}\n      {...other}\n    >\n      {children}\n    </MainCard>\n  );\n};\n\nAuthCardWrapper.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default AuthCardWrapper;\n","// material-ui\nimport { experimentalStyled as styled } from '@material-ui/core/styles';\n\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    display: 'flex',\n    backgroundColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary.light,\n    height: '100%',\n    minHeight: '100vh',\n    width: '100%',\n    maxWidth: 'calc(100% + 16px)'\n}));\n\nexport default AuthWrapper1;\n","import { useEffect, useRef } from 'react';\n\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","export const filterUser = (data) => {\n  const name = data.firstName + \" \" + data.lastName;\n\n  const job = data.job;\n  let app = \"\";\n\n  if (job === \"Secretário(a)\") {\n    app = \"secretaria\";\n  }\n\n  const user = {\n    app: app,\n    cpf: data.cpf,\n    email: data.email,\n    password: data.password,\n    job: job,\n    name: name,\n    consents: data.consents,\n  };\n  return user;\n};\n","import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// material-ui\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Autocomplete,\n  Box,\n  Button,\n  Checkbox,\n  Divider,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Typography,\n  TextField,\n  Link,\n} from \"@material-ui/core\";\n\n// third party\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\n\n// project imports\nimport useScriptRef from \"@src/hooks/useScriptRef\";\nimport { strengthColor, strengthIndicator } from \"@src/utils/password-strength\";\nimport Mask from \"@src/utils/Mask\";\nimport { SNACKBAR_OPEN } from \"@src/store/actions\";\nimport { profiles } from \"@src/store/constant\";\nimport config from \"@src/config\";\nimport { createUser } from \"@src/api/auth\";\nimport { filterUser } from \"@src/utils/createUser\";\n\n// assets\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n  redButton: {\n    fontSize: \"1rem\",\n    fontWeight: 500,\n    backgroundColor:\n      theme.palette.mode === \"dark\"\n        ? theme.palette.dark.main\n        : theme.palette.grey[50],\n    border: \"1px solid\",\n    borderColor:\n      theme.palette.mode === \"dark\"\n        ? theme.palette.dark.light + 20\n        : theme.palette.grey[100],\n    color: theme.palette.grey[700],\n    textTransform: \"none\",\n    \"&:hover\": {\n      backgroundColor:\n        theme.palette.mode === \"dark\"\n          ? theme.palette.dark.light + 20\n          : theme.palette.primary.light,\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      fontSize: \"0.875rem\",\n    },\n  },\n  signDivider: {\n    flexGrow: 1,\n  },\n  signText: {\n    cursor: \"unset\",\n    margin: theme.spacing(2),\n    padding: \"5px 56px\",\n    borderColor:\n      theme.palette.mode === \"dark\"\n        ? theme.palette.dark.light + 20 + \" !important\"\n        : theme.palette.grey[100] + \" !important\",\n    color: theme.palette.grey[900] + \"!important\",\n    fontWeight: 500,\n  },\n  loginIcon: {\n    marginRight: \"16px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginRight: \"8px\",\n    },\n  },\n  loginInput: {\n    ...theme.typography.customInput,\n  },\n}));\n\n//===========================|| JWT - REGISTER ||===========================//\n\nconst FormRegister = ({ ...others }) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const classes = useStyles();\n  const scriptedRef = useScriptRef();\n\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [checkedPrivacy, setCheckedPrivacy] = React.useState(false);\n  const [checkdTerms, setCheckedTerms] = React.useState(false);\n\n  const [strength, setStrength] = React.useState(0);\n  const [level, setLevel] = React.useState(\"\");\n\n  const registerSubmit = async (values) => {\n    const data = {\n      consents: {\n        privacy: checkedPrivacy,\n        terms: checkdTerms,\n      },\n      cpf: values.cpf,\n      email: values.email,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      password: values.password,\n      job: values.profession,\n    };\n    if (\n      checkdTerms &&\n      checkedPrivacy &&\n      data.profession !== \"\" &&\n      values.confirmPassword === data.password\n    ) {\n      const user = filterUser(data);\n      const response = await createUser(user);\n\n      if (response.status === 201) {\n        dispatch({\n          type: SNACKBAR_OPEN,\n          open: true,\n          message: response.data.message,\n          variant: \"alert\",\n          anchorOrigin: { vertical: \"top\", horizontal: \"center\" },\n          alertSeverity: \"success\",\n          close: false,\n        });\n        setTimeout(() => navigate(\"/\"), 1000);\n      } else {\n        dispatch({\n          type: SNACKBAR_OPEN,\n          open: true,\n          message: response.data.message,\n          variant: \"alert\",\n          anchorOrigin: { vertical: \"top\", horizontal: \"center\" },\n          alertSeverity: \"warning\",\n          close: false,\n        });\n      }\n    } else {\n      dispatch({\n        type: SNACKBAR_OPEN,\n        open: true,\n        message:\n          \"É preciso estar de acordo com nossas políticas e preencher todos os dados.\",\n        variant: \"alert\",\n        anchorOrigin: { vertical: \"top\", horizontal: \"center\" },\n        alertSeverity: \"warning\",\n        close: false,\n      });\n    }\n  };\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const changePassword = (value) => {\n    const temp = strengthIndicator(value);\n    setStrength(temp);\n    setLevel(strengthColor(temp));\n  };\n\n  useEffect(() => {\n    changePassword(\"123456\");\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n        <Grid>\n          <Divider className={classes.signDivider} orientation=\"horizontal\" />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          container\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Box mb={2}>\n            <Typography variant=\"subtitle1\">Preencha todos dados</Typography>\n          </Box>\n        </Grid>\n      </Grid>\n\n      <Formik\n        initialValues={{\n          cpf: \"\",\n          email: \"\",\n          firstName: \"\",\n          lastName: \"\",\n          password: \"\",\n          profession: \"\",\n          submit: null,\n          confirmPassword: \"\",\n        }}\n        validationSchema={Yup.object().shape({\n          profession: Yup.string().required(\"Indique seu perfil\"),\n          cpf: Yup.string().min(14).max(14).required(\"CPF é obrigatório\"),\n          email: Yup.string()\n            .email(\"O email deve ser válido\")\n            .max(255)\n            .required(\"Email é obrigatório\"),\n          firstName: Yup.string()\n            .max(20)\n            .required(\"Digite o seu primeiro nome\"),\n          lastName: Yup.string().max(20).required(\"Digite o seu último nome\"),\n          password: Yup.string().max(255).required(\"Senha é obrigatória\"),\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            registerSubmit(values);\n            if (scriptedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          setFieldValue,\n          isSubmitting,\n          touched,\n          values,\n        }) => (\n          <form noValidate onSubmit={handleSubmit} {...others}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  className={classes.loginInput}\n                  variant=\"outlined\"\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-firstName-register\">\n                    Primeiro Nome\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-firstName-register\"\n                    name=\"firstName\"\n                    value={values.firstName}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    inputProps={{\n                      classes: {\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                    autoComplete=\"off\"\n                  />\n                  {touched.firstName && errors.firstName && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-name--register\"\n                    >\n                      {\" \"}\n                      {errors.firstName}{\" \"}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <FormControl\n                  fullWidth\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  className={classes.loginInput}\n                  variant=\"outlined\"\n                >\n                  <InputLabel htmlFor=\"outlined-adornment-lastName-register\">\n                    Primeiro Nome\n                  </InputLabel>\n                  <OutlinedInput\n                    id=\"outlined-adornment-lastName-register\"\n                    name=\"lastName\"\n                    value={values.lastName}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    inputProps={{\n                      classes: {\n                        notchedOutline: classes.notchedOutline,\n                      },\n                    }}\n                  />\n                  {touched.lastName && errors.lastName && (\n                    <FormHelperText\n                      error\n                      id=\"standard-weight-helper-lastName--register\"\n                    >\n                      {\" \"}\n                      {errors.lastName}{\" \"}\n                    </FormHelperText>\n                  )}\n                </FormControl>\n              </Grid>\n            </Grid>\n            <FormControl\n              fullWidth\n              error={Boolean(touched.profession && errors.profession)}\n              className={classes.loginInput}\n              variant=\"outlined\"\n            >\n              <Autocomplete\n                id=\"outlined-adornment-profession-register\"\n                fullWidth\n                options={profiles}\n                name={\"profession\"}\n                inputValue={values.profession || \"\"}\n                getOptionSelected={(option, value) =>\n                  option.value === value.value\n                }\n                onChange={(e, value) =>\n                  setFieldValue(\"profession\", value ? value.value : \"\")\n                }\n                onBlur={handleBlur}\n                renderInput={(params) => (\n                  <TextField {...params} label={\"Área de atuação\"} />\n                )}\n                sx={{\n                  \"& .MuiOutlinedInput-root\": {\n                    pr: \"30px !important\",\n                  },\n                }}\n              />\n              {touched.profession && errors.profession && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-profession--register\"\n                >\n                  {\" \"}\n                  {errors.profession}{\" \"}\n                </FormHelperText>\n              )}\n            </FormControl>\n            <FormControl\n              fullWidth\n              error={Boolean(touched.cpf && errors.cpf)}\n              className={classes.loginInput}\n              variant=\"outlined\"\n            >\n              <InputLabel htmlFor=\"outlined-adornment-cpf-register\">\n                CPF\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-cpf-register\"\n                fullWidth\n                value={values.cpf}\n                onBlur={handleBlur}\n                onChange={handleChange}\n                name=\"cpf\"\n                inputProps={{\n                  mask: [\n                    /[0-9]/,\n                    /[0-9]/,\n                    /[0-9]/,\n                    \".\",\n                    /[0-9]/,\n                    /[0-9]/,\n                    /[0-9]/,\n                    \".\",\n                    /[0-9]/,\n                    /[0-9]/,\n                    /[0-9]/,\n                    \"-\",\n                    /[0-9]/,\n                    /[0-9]/,\n                  ],\n                }}\n                inputComponent={Mask}\n              />\n              {touched.cpf && errors.cpf && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-text--register\"\n                >\n                  {\" \"}\n                  {errors.cpf}{\" \"}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            <FormControl\n              fullWidth\n              error={Boolean(touched.email && errors.email)}\n              className={classes.loginInput}\n              variant=\"outlined\"\n            >\n              <InputLabel htmlFor=\"outlined-adornment-email-register\">\n                Email\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-email-register\"\n                type=\"email\"\n                value={values.email}\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                inputProps={{\n                  classes: {\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {touched.email && errors.email && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-text--register\"\n                >\n                  {\" \"}\n                  {errors.email}{\" \"}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            <FormControl\n              fullWidth\n              error={Boolean(touched.password && errors.password)}\n              className={classes.loginInput}\n              variant=\"outlined\"\n            >\n              <InputLabel htmlFor=\"outlined-adornment-password-register\">\n                Senha\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-password-register\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={values.password}\n                name=\"password\"\n                label=\"Password\"\n                onBlur={handleBlur}\n                onChange={(e) => {\n                  handleChange(e);\n                  changePassword(e.target.value);\n                }}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                      edge=\"end\"\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n                inputProps={{\n                  classes: {\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {touched.password && errors.password && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-text-password-register\"\n                >\n                  {\" \"}\n                  {errors.password}{\" \"}\n                </FormHelperText>\n              )}\n            </FormControl>\n            <FormControl\n              fullWidth\n              error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n              className={classes.loginInput}\n              variant=\"outlined\"\n            >\n              <InputLabel htmlFor=\"outlined-adornment-confirmPassword-register\">\n                Confirmar Senha\n              </InputLabel>\n              <OutlinedInput\n                id=\"outlined-adornment-confirmPassword-register\"\n                value={values.confirmPassword}\n                name=\"confirmPassword\"\n                label=\"Confirmar Senha\"\n                onBlur={handleBlur}\n                onChange={(e) => {\n                  handleChange(e);\n                  changePassword(e.target.value);\n                }}\n                inputProps={{\n                  classes: {\n                    notchedOutline: classes.notchedOutline,\n                  },\n                }}\n              />\n              {touched.confirmPassword && errors.confirmPassword && (\n                <FormHelperText\n                  error\n                  id=\"standard-weight-helper-text-confirmPassword-register\"\n                >\n                  {\" \"}\n                  {errors.confirmPassword}{\" \"}\n                </FormHelperText>\n              )}\n            </FormControl>\n\n            {strength !== 0 && (\n              <FormControl fullWidth>\n                <Box mb={2}>\n                  <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item>\n                      <Box\n                        width={85}\n                        height={8}\n                        borderRadius={7}\n                        backgroundColor={level.color}\n                      ></Box>\n                    </Grid>\n                    <Grid item>\n                      <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                        {level.label}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </FormControl>\n            )}\n\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={checkedPrivacy}\n                      onChange={(event) =>\n                        setCheckedPrivacy(event.target.checked)\n                      }\n                      name=\"checked\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"subtitle1\">\n                      Concordo com a &nbsp;\n                      <Typography\n                        variant=\"subtitle1\"\n                        component={Link}\n                        href={`${config.orisistem}/politica-de-privacidade`}\n                        target=\"_blank\"\n                      >\n                        Política de Privacidade.\n                      </Typography>\n                    </Typography>\n                  }\n                />\n              </Grid>\n            </Grid>\n\n            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={checkdTerms}\n                      onChange={(event) =>\n                        setCheckedTerms(event.target.checked)\n                      }\n                      name=\"checked\"\n                      color=\"primary\"\n                    />\n                  }\n                  label={\n                    <Typography variant=\"subtitle1\">\n                      Concordo com os &nbsp;\n                      <Typography\n                        variant=\"subtitle1\"\n                        component={Link}\n                        href={`${config.orisistem}/termos-de-uso`}\n                        target=\"_blank\"\n                      >\n                        Termos de Uso.\n                      </Typography>\n                    </Typography>\n                  }\n                />\n              </Grid>\n            </Grid>\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>{errors.submit}</FormHelperText>\n              </Box>\n            )}\n\n            <Box mt={2}>\n              <Button\n                disableElevation\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n              >\n                Registrar\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </React.Fragment>\n  );\n};\n\nexport default FormRegister;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\n// material-ui\nimport { useTheme } from \"@material-ui/core\";\nimport {\n  Divider,\n  Grid,\n  Stack,\n  Typography,\n  useMediaQuery,\n} from \"@material-ui/core\";\n\n// project imports\nimport AuthWrapper1 from \"@src/components/extended/AuthWrapper1\";\nimport AuthCardWrapper from \"@src/components/extended/AuthCardWrapper\";\nimport RegisterForm from \"./Form\";\n\n//===============================|| AUTH3 - REGISTER ||===============================//\n\nconst Register = () => {\n  const theme = useTheme();\n  const matchDownSM = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <AuthWrapper1>\n      <Grid\n        container\n        justifyContent={matchDownSM ? \"center\" : \"space-between\"}\n        alignItems=\"flex-start\"\n      >\n        <Grid item xs={12} sx={{ minHeight: \"100vh\", height: \"100%\" }}>\n          <Grid\n            sx={{\n              minHeight: \"100vh\",\n              height: \"100%\",\n              p: matchDownSM ? 0 : \"0 80px\",\n            }}\n            container\n            direction=\"column\"\n            alignItems={matchDownSM ? \"center\" : \"flex-start\"}\n            spacing={matchDownSM ? 3 : 6}\n            justifyContent={matchDownSM ? \"center\" : \"space-between\"}\n          >\n            <Grid item xs={12}></Grid>\n            <Grid\n              item\n              xs={12}\n              container\n              justifyContent=\"center\"\n              alignItems=\"center\"\n            >\n              <AuthCardWrapper>\n                <Grid\n                  container\n                  spacing={2}\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                >\n                  <Grid item sx={{ mb: 3 }}>\n                    {/* <RouterLink to=\"#\">\n                                            <img alt=\"Auth method\" src={theme.palette.mode === 'dark' ? logoDark : logo} width=\"100\" />\n                                        </RouterLink> */}\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid\n                      container\n                      direction={matchDownSM ? \"column-reverse\" : \"row\"}\n                      alignItems=\"center\"\n                      justifyContent=\"center\"\n                    >\n                      <Grid item>\n                        <Stack\n                          alignItems=\"center\"\n                          justifyContent=\"center\"\n                          spacing={1}\n                        >\n                          <Typography\n                            color={theme.palette.secondary.main}\n                            gutterBottom\n                            variant={matchDownSM ? \"h3\" : \"h2\"}\n                          >\n                            Registre-se\n                          </Typography>\n                          <Typography\n                            variant=\"caption\"\n                            fontSize=\"16px\"\n                            textAlign={matchDownSM ? \"center\" : \"\"}\n                          >\n                            E faça parte da nossa Comunidade\n                          </Typography>\n                        </Stack>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <RegisterForm />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Divider />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Grid\n                      item\n                      container\n                      direction=\"column\"\n                      alignItems=\"center\"\n                      xs={12}\n                    >\n                      <Typography\n                        component={RouterLink}\n                        to=\"/login\"\n                        variant=\"subtitle1\"\n                        sx={{ textDecoration: \"none\" }}\n                      >\n                        Já tem uma conta?\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </AuthCardWrapper>\n            </Grid>\n            {/* <AuthFooter /> */}\n          </Grid>\n        </Grid>\n      </Grid>\n    </AuthWrapper1>\n  );\n};\n\nexport default Register;\n","export const gridSpacing = 3;\nexport const drawerWidth = 260;\nexport const appDrawerWidth = 320;\n\nexport const states = [\n  { value: \"Selecionar\", label: \"Selecionar\" },\n  { value: \"AC\", label: \"Acre\" },\n  { value: \"AL\", label: \"Alagoas\" },\n  { value: \"AP\", label: \"Amapá\" },\n  { value: \"AM\", label: \"Amazonas\" },\n  { value: \"BA\", label: \"Bahia\" },\n  { value: \"CE\", label: \"Ceará\" },\n  { value: \"DF\", label: \"Distrito Federal\" },\n  { value: \"ES\", label: \"Espírito Santo\" },\n  { value: \"GO\", label: \"Goiás\" },\n  { value: \"MA\", label: \"Maranhão\" },\n  { value: \"MT\", label: \"Mato Grosso\" },\n  { value: \"MS\", label: \"Mato Grosso do Sul\" },\n  { value: \"MG\", label: \"Minas Gerais\" },\n  { value: \"PA\", label: \"Pará\" },\n  { value: \"PB\", label: \"Paraíba\" },\n  { value: \"PR\", label: \"Paraná\" },\n  { value: \"PE\", label: \"Pernambuco\" },\n  { value: \"PI\", label: \"Piauí\" },\n  { value: \"RJ\", label: \"Rio de Janeiro\" },\n  { value: \"RN\", label: \"Rio Grande do Norte\" },\n  { value: \"RS\", label: \"Rio Grande do Sul\" },\n  { value: \"RO\", label: \"Rondônia\" },\n  { value: \"RR\", label: \"Roraima\" },\n  { value: \"SC\", label: \"Santa Catarina\" },\n  { value: \"SP\", label: \"São Paulo\" },\n  { value: \"SE\", label: \"Sergipe\" },\n  { value: \"TO\", label: \"Tocantins\" },\n];\n\nexport const logradouros = [\n  { value: \"Área\" },\n  { value: \"Acesso\" },\n  { value: \"Acampamento\" },\n  { value: \"Acesso Local\" },\n  { value: \"Adro\" },\n  { value: \"Área Especial\" },\n  { value: \"Aeroporto\" },\n  { value: \"Alameda\" },\n  { value: \"Avenida Marginal Direita\" },\n  { value: \"Avenida Marginal Esquerda\" },\n  { value: \"Anel Viário\" },\n  { value: \"Antiga Estrada\" },\n  { value: \"Artéria\" },\n  { value: \"Alto\" },\n  { value: \"Atalho\" },\n  { value: \"Área Verde\" },\n  { value: \"Avenida\" },\n  { value: \"Avenida Contorno\" },\n  { value: \"Avenida Marginal\" },\n  { value: \"Avenida Velha\" },\n  { value: \"Balneário\" },\n  { value: \"Beco\" },\n  { value: \"Buraco\" },\n  { value: \"Belvedere\" },\n  { value: \"Bloco\" },\n  { value: \"Balão\" },\n  { value: \"Blocos\" },\n  { value: \"Bulevar\" },\n  { value: \"Bosque\" },\n  { value: \"Boulevard\" },\n  { value: \"Baixa\" },\n  { value: \"Cais\" },\n  { value: \"Calçada\" },\n  { value: \"Caminho\" },\n  { value: \"Canal\" },\n  { value: \"Chácara\" },\n  { value: \"Chapadão\" },\n  { value: \"Ciclovia\" },\n  { value: \"Circular\" },\n  { value: \"Conjunto\" },\n  { value: \"Conjunto Mutirão\" },\n  { value: \"Complexo Viário\" },\n  { value: \"Colônia\" },\n  { value: \"Comunidade\" },\n  { value: \"Condomínio\" },\n  { value: \"Corredor\" },\n  { value: \"Campo\" },\n  { value: \"Córrego\" },\n  { value: \"Contorno\" },\n  { value: \"Descida\" },\n  { value: \"Desvio\" },\n  { value: \"Distrito\" },\n  { value: \"Entre Bloco\" },\n  { value: \"Estrada Intermunicipal\" },\n  { value: \"Enseada\" },\n  { value: \"Entrada Particular\" },\n  { value: \"Entre Quadra\" },\n  { value: \"Escada\" },\n  { value: \"Escadaria\" },\n  { value: \"Estrada Estadual\" },\n  { value: \"Estrada Vicinal\" },\n  { value: \"Estrada de Ligação\" },\n  { value: \"Estrada Municipal\" },\n  { value: \"Esplanada\" },\n  { value: \"Estrada de Servidão\" },\n  { value: \"Estrada\" },\n  { value: \"Estrada Velha\" },\n  { value: \"Estrada Antiga\" },\n  { value: \"Estação\" },\n  { value: \"Estádio\" },\n  { value: \"Estância\" },\n  { value: \"Estrada Particular\" },\n  { value: \"Estacionamento\" },\n  { value: \"Evangélica\" },\n  { value: \"Elevada\" },\n  { value: \"Eixo Industrial\" },\n  { value: \"Favela\" },\n  { value: \"Fazenda\" },\n  { value: \"Ferrovia\" },\n  { value: \"Fonte\" },\n  { value: \"Feira\" },\n  { value: \"Forte\" },\n  { value: \"Galeria\" },\n  { value: \"Granja\" },\n  { value: \"Núcleo Habitacional\" },\n  { value: \"Ilha\" },\n  { value: \"Indeterminado\" },\n  { value: \"Ilhota\" },\n  { value: \"Jardim\" },\n  { value: \"Jardinete\" },\n  { value: \"Ladeira\" },\n  { value: \"Lagoa\" },\n  { value: \"Lago\" },\n  { value: \"Loteamento\" },\n  { value: \"Largo\" },\n  { value: \"Lote\" },\n  { value: \"Mercado\" },\n  { value: \"Marina\" },\n  { value: \"Modulo\" },\n  { value: \"Projeção\" },\n  { value: \"Morro\" },\n  { value: \"Monte\" },\n  { value: \"Núcleo\" },\n  { value: \"Núcleo Rural\" },\n  { value: \"Outeiro\" },\n  { value: \"Paralela\" },\n  { value: \"Passeio\" },\n  { value: \"Pátio\" },\n  { value: \"Praça\" },\n  { value: \"Praça de Esportes\" },\n  { value: \"Parada\" },\n  { value: \"Paradouro\" },\n  { value: \"Ponta\" },\n  { value: \"Praia\" },\n  { value: \"Prolongamento\" },\n  { value: \"Parque Municipal\" },\n  { value: \"Parque\" },\n  { value: \"Parque Residencial\" },\n  { value: \"Passarela\" },\n  { value: \"Passagem\" },\n  { value: \"Passagem de Pedestre\" },\n  { value: \"Passagem Subterrânea\" },\n  { value: \"Ponte\" },\n  { value: \"Porto\" },\n  { value: \"Quadra\" },\n  { value: \"Quinta\" },\n  { value: \"Quintas\" },\n  { value: \"Rua\" },\n  { value: \"Rua Integração\" },\n  { value: \"Rua de Ligação\" },\n  { value: \"Rua Particular\" },\n  { value: \"Rua Velha\" },\n  { value: \"Ramal\" },\n  { value: \"Recreio\" },\n  { value: \"Recanto\" },\n  { value: \"Retiro\" },\n  { value: \"Residencial\" },\n  { value: \"Reta\" },\n  { value: \"Ruela\" },\n  { value: \"Rampa\" },\n  { value: \"Rodo Anel\" },\n  { value: \"Rodovia\" },\n  { value: \"Rotula\" },\n  { value: \"Rua de Pedestre\" },\n  { value: \"Margem\" },\n  { value: \"Retorno\" },\n  { value: \"Rotatória\" },\n  { value: \"Segunda Avenida\" },\n  { value: \"Sitio\" },\n  { value: \"Servidão\" },\n  { value: \"Setor\" },\n  { value: \"Subida\" },\n  { value: \"Trincheira\" },\n  { value: \"Terminal\" },\n  { value: \"Trecho\" },\n  { value: \"Trevo\" },\n  { value: \"Túnel\" },\n  { value: \"Travessa\" },\n  { value: \"Travessa Particular\" },\n  { value: \"Travessa Velha\" },\n  { value: \"Unidade\" },\n  { value: \"Via\" },\n  { value: \"Via Coletora\" },\n  { value: \"Via Local\" },\n  { value: \"Via de Acesso\" },\n  { value: \"Vala\" },\n  { value: \"Via Costeira\" },\n  { value: \"Viaduto\" },\n  { value: \"Via Expressa\" },\n  { value: \"Vereda\" },\n  { value: \"Via Elevado\" },\n  { value: \"Vila\" },\n  { value: \"Viela\" },\n  { value: \"Vale\" },\n  { value: \"Via Litorânea\" },\n  { value: \"Via de Pedestre\" },\n  { value: \"Variante\" },\n  { value: \"Zigue-Zague\" },\n];\n\nexport const profiles = [\n  { label: \"\", value: \"\" },\n  { label: \"Secretário(a)\", value: \"Secretário(a)\" },\n];\n\nexport const workers = [\n  \"MAO DE OBRA (C/ ENCARGOS)\",\n  \"ADMINISTRAÇÃO LOCAL DE OBRA (C/ ENCARGOS)\",\n];\n","import React from \"react\";\n\nimport MaskedInput from \"react-text-mask\";\n\n// mask expression\nconst TextMaskCExpDate = React.forwardRef(function TextMaskCustom(props, ref) {\n  const setRef = React.useCallback(\n    (maskedInputRef) => {\n      const value = maskedInputRef ? maskedInputRef.inputElement : null;\n\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref) {\n        ref.current = value;\n      }\n    },\n    [ref]\n  );\n\n  return <MaskedInput {...props} ref={setRef} />;\n});\n\nexport default TextMaskCExpDate;\n","/**\n * Password validator for login pages\n */\n\nimport value from \"../assets/scss/_themes-vars.module.scss\";\n\n// has number\nconst hasNumber = (value) => {\n  return new RegExp(/[0-9]/).test(value);\n};\n\n// has mix of small and capitals\nconst hasMixed = (value) => {\n  return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\n};\n\n// has special chars\nconst hasSpecial = (value) => {\n  return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\n};\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n  if (count < 2) return { label: \"Muito Fraca\", color: value.red500 };\n  if (count < 3) return { label: \"Fraca\", color: value.amber500 };\n  if (count < 4) return { label: \"Normal\", color: value.deepOrange200 };\n  if (count < 5) return { label: \"Boa\", color: value.A400 };\n  if (count < 6) return { label: \"Forte\", color: value.A700 };\n};\n\n// password strength indicator\nexport const strengthIndicator = (value) => {\n  let strengths = 0;\n  if (value.length > 5) strengths++;\n  if (value.length > 7) strengths++;\n  if (hasNumber(value)) strengths++;\n  if (hasSpecial(value)) strengths++;\n  if (hasMixed(value)) strengths++;\n  return strengths;\n};\n"],"names":["headerSX","mr","React","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","Card","borderColor","palette","mode","background","default","primary","CardHeader","action","Typography","variant","Divider","CardContent","className","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","padding","spacing","other","classes","AuthWrapper1","styled","display","backgroundColor","light","height","minHeight","width","scripted","useRef","useEffect","current","filterUser","data","name","firstName","lastName","job","app","cpf","email","password","consents","redButton","fontSize","fontWeight","dark","main","grey","color","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","dispatch","useDispatch","navigate","useNavigate","scriptedRef","useScriptRef","showPassword","setShowPassword","checkedPrivacy","setCheckedPrivacy","checkdTerms","setCheckedTerms","strength","setStrength","level","setLevel","registerSubmit","values","privacy","terms","profession","confirmPassword","user","createUser","response","status","type","SNACKBAR_OPEN","open","message","anchorOrigin","vertical","horizontal","alertSeverity","close","setTimeout","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","value","temp","strengthIndicator","strengthColor","Grid","container","direction","justifyContent","orientation","item","xs","alignItems","Box","mb","initialValues","submit","validationSchema","Yup","shape","required","min","max","onSubmit","setErrors","setStatus","setSubmitting","success","err","errors","handleBlur","handleChange","handleSubmit","setFieldValue","isSubmitting","touched","noValidate","sm","FormControl","fullWidth","error","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","notchedOutline","autoComplete","FormHelperText","Autocomplete","options","profiles","inputValue","getOptionSelected","option","e","renderInput","params","TextField","label","pr","mask","inputComponent","Mask","target","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","Visibility","VisibilityOff","borderRadius","FormControlLabel","control","Checkbox","checked","component","Link","href","config","mt","Button","disableElevation","disabled","size","matchDownSM","useMediaQuery","p","AuthCardWrapper","Stack","gutterBottom","textAlign","RouterLink","to","textDecoration","gridSpacing","TextMaskCExpDate","props","setRef","maskedInputRef","inputElement","count","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed"],"sourceRoot":""}